From 1172ab0f0617eef96af0802fb108a27e77ea17af Mon Sep 17 00:00:00 2001
From: taotieren <admin@taotieren.com>
Date: Thu, 4 Sep 2025 20:55:38 +0800
Subject: [PATCH] fix-cmake

---
 cmake/MujocoDependencies.cmake            | 41 ++++++++++++++---------
 sample/cmake/SampleDependencies.cmake     |  8 ++---
 simulate/cmake/SimulateDependencies.cmake |  8 ++---
 3 files changed, 34 insertions(+), 23 deletions(-)

diff --git a/cmake/MujocoDependencies.cmake b/cmake/MujocoDependencies.cmake
index 5cdc33cb..ec470d9a 100644
--- a/cmake/MujocoDependencies.cmake
+++ b/cmake/MujocoDependencies.cmake
@@ -126,11 +126,12 @@ endif()
 
 set(QHULL_ENABLE_TESTING OFF)
 
+find_package(Qhull REQUIRED)
 findorfetch(
   USE_SYSTEM_PACKAGE
-  OFF
+  ON
   PACKAGE_NAME
-  qhull
+  Qhull
   LIBRARY_NAME
   qhull
   GIT_REPO
@@ -141,18 +142,24 @@ findorfetch(
   qhull
   EXCLUDE_FROM_ALL
 )
-# MuJoCo includes a file from libqhull_r which is not exported by the qhull include directories.
-# Add it to the target.
-target_include_directories(
-  qhullstatic_r INTERFACE $<BUILD_INTERFACE:${qhull_SOURCE_DIR}/src/libqhull_r>
-)
-target_compile_options(qhullstatic_r PRIVATE ${MUJOCO_MACOS_COMPILE_OPTIONS})
-target_link_options(qhullstatic_r PRIVATE ${MUJOCO_MACOS_LINK_OPTIONS})
 
+if(NOT TARGET qhullstatic_r)
+  add_library(qhullstatic_r INTERFACE)
+  target_link_libraries(qhullstatic_r INTERFACE Qhull::qhull_r)
+  # Workaround as headers are installed in <prefix>/include/libqhull_r/something.h
+  # but mujoco include them as #include <something.h>
+  get_property(qhull_include_dirs TARGET Qhull::qhull_r PROPERTY INTERFACE_INCLUDE_DIRECTORIES)
+  foreach(qhull_include_dir IN LISTS qhull_include_dirs)
+    target_include_directories(qhullstatic_r INTERFACE ${qhull_include_dirs}/libqhull_r)
+  endforeach()
+  target_include_directories(qhullstatic_r INTERFACE )
+endif()
+ 
+find_package(tinyxml2 REQUIRED)
 set(tinyxml2_BUILD_TESTING OFF)
 findorfetch(
   USE_SYSTEM_PACKAGE
-  OFF
+  ON
   PACKAGE_NAME
   tinyxml2
   LIBRARY_NAME
@@ -165,12 +172,11 @@ findorfetch(
   tinyxml2
   EXCLUDE_FROM_ALL
 )
-target_compile_options(tinyxml2 PRIVATE ${MUJOCO_MACOS_COMPILE_OPTIONS})
-target_link_options(tinyxml2 PRIVATE ${MUJOCO_MACOS_LINK_OPTIONS})
 
+find_package(tinyobjloader REQUIRED)
 findorfetch(
   USE_SYSTEM_PACKAGE
-  OFF
+  ON
   PACKAGE_NAME
   tinyobjloader
   LIBRARY_NAME
@@ -239,10 +245,11 @@ if(MUJOCO_BUILD_TESTS)
       CACHE INTERNAL "Build tests."
   )
 
+  find_package(absl REQUIRED)
   set(ABSL_BUILD_TESTING OFF)
   findorfetch(
     USE_SYSTEM_PACKAGE
-    OFF
+    ON
     PACKAGE_NAME
     absl
     LIBRARY_NAME
@@ -301,9 +308,10 @@ if(MUJOCO_BUILD_TESTS)
 
   set(BENCHMARK_ENABLE_TESTING OFF)
 
+  find_package(benchmark REQUIRED)
   findorfetch(
     USE_SYSTEM_PACKAGE
-    OFF
+    ON
     PACKAGE_NAME
     benchmark
     LIBRARY_NAME
@@ -322,6 +330,9 @@ endif()
 
 if(MUJOCO_TEST_PYTHON_UTIL)
   add_compile_definitions(EIGEN_MPL2_ONLY)
+  find_package(Eigen3 REQUIRED)
+  # Doing that so the next if is not triggered
+  add_library(eigen ALIAS Eigen3::Eigen)
   if(NOT TARGET eigen)
     # Support new IN_LIST if() operator.
     set(CMAKE_POLICY_DEFAULT_CMP0057 NEW)
diff --git a/sample/cmake/SampleDependencies.cmake b/sample/cmake/SampleDependencies.cmake
index 5365ab10..3451affc 100644
--- a/sample/cmake/SampleDependencies.cmake
+++ b/sample/cmake/SampleDependencies.cmake
@@ -22,12 +22,12 @@ else()
 endif()
 
 option(MUJOCO_SAMPLES_USE_SYSTEM_MUJOCO "Use installed MuJoCo version."
-       ${DEFAULT_USE_SYSTEM_MUJOCO}
+       ON
 )
 unset(DEFAULT_USE_SYSTEM_MUJOCO)
 
-option(MUJOCO_SAMPLES_USE_SYSTEM_MUJOCO "Use installed MuJoCo version." OFF)
-option(MUJOCO_SAMPLES_USE_SYSTEM_GLFW "Use installed GLFW version." OFF)
+option(MUJOCO_SAMPLES_USE_SYSTEM_MUJOCO "Use installed MuJoCo version." ON)
+option(MUJOCO_SAMPLES_USE_SYSTEM_GLFW "Use installed GLFW version." ON)
 
 set(MUJOCO_DEP_VERSION_glfw3
     7b6aead9fb88b3623e3b3725ebb42670cbe4c579 # 3.4
@@ -59,7 +59,7 @@ findorfetch(
 )
 
 option(MUJOCO_EXTRAS_STATIC_GLFW
-       "Link MuJoCo sample apps and simulate libraries against GLFW statically." ON
+       "Link MuJoCo sample apps and simulate libraries against GLFW statically." OFF
 )
 if(MUJOCO_EXTRAS_STATIC_GLFW)
   set(BUILD_SHARED_LIBS_OLD ${BUILD_SHARED_LIBS})
diff --git a/simulate/cmake/SimulateDependencies.cmake b/simulate/cmake/SimulateDependencies.cmake
index 4e910520..29e109bc 100644
--- a/simulate/cmake/SimulateDependencies.cmake
+++ b/simulate/cmake/SimulateDependencies.cmake
@@ -22,12 +22,12 @@ else()
 endif()
 
 option(MUJOCO_SIMULATE_USE_SYSTEM_MUJOCO "Use installed MuJoCo version."
-       ${DEFAULT_USE_SYSTEM_MUJOCO}
+       ON
 )
 unset(DEFAULT_USE_SYSTEM_MUJOCO)
 
-option(MUJOCO_SIMULATE_USE_SYSTEM_MUJOCO "Use installed MuJoCo version." OFF)
-option(MUJOCO_SIMULATE_USE_SYSTEM_GLFW "Use installed GLFW version." OFF)
+option(MUJOCO_SIMULATE_USE_SYSTEM_MUJOCO "Use installed MuJoCo version." ON)
+option(MUJOCO_SIMULATE_USE_SYSTEM_GLFW "Use installed GLFW version." ON)
 
 set(MUJOCO_DEP_VERSION_glfw3
     7b6aead9fb88b3623e3b3725ebb42670cbe4c579 # 3.4
@@ -59,7 +59,7 @@ findorfetch(
 )
 
 option(MUJOCO_EXTRAS_STATIC_GLFW
-       "Link MuJoCo sample apps and simulate libraries against GLFW statically." ON
+       "Link MuJoCo sample apps and simulate libraries against GLFW statically." OFF
 )
 if(MUJOCO_EXTRAS_STATIC_GLFW)
   set(BUILD_SHARED_LIBS_OLD ${BUILD_SHARED_LIBS})
-- 
2.51.0

