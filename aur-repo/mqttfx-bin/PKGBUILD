# Maintainer: Arctic Ice Studio <development@arcticicestudio.com>
# Contributor: Arctic Ice Studio <development@arcticicestudio.com>
# Maintainer: taotieren <admin@taotieren.com>

pkgname=mqttfx-bin
_name=mqttfx
pkgver=5.9.0
pkgrel=0
pkgdesc="A MQTT Client written in Java based on Eclipse Paho"
arch=("x86_64")
url="https://www.softblade.de/"
depends=('java-runtime=21')
makedepends=('java-runtime=21')
license=("Apache-2.0")
options=("!strip")
source=(
  #   "https://web.archive.org/web/20210514230412/http://www.jensd.de/apps/${_pkgbasename}/${pkgver}/${_name}-${pkgver}-64bit.deb"
  "https://download.softblade.net/${_name}-${pkgver}-unix.sh"
  "${_name}.desktop"
  "${_name}.png"
)
sha256sums=('b5ecdbd738cd684b303109d7cac391147a10f662e436ec0de8851f5372b243be'
            '741674f5b782aa4de0b071b7f49484b74ee2150e38b5d83eb4bd00b172978e2a'
            '6c1b23755d3b1832ddb643b585d623128cde38e2ef42e7839141cf2106b0a59e')

prepare() {
  cd "$srcdir"
  #   tail -c 132181514 ${_name}-${pkgver}-unix.sh >${_name}-${pkgver}-unix.tar.gz
  chmod +x ${_name}-${pkgver}-unix.sh
  ./${_name}-${pkgver}-unix.sh
  mkdir -p build
  bsdtar -xf ${_name}-${pkgver}-unix.tar.gz -C build
  #   bsdtar xf ${_deb_file_name} -C build
  #   bsdtar xf build/${_deb_file_name} -C build
}

build() {
  cd "${srcdir}"

}

package() {
  local bin_name=MQTTfx
  cd "${srcdir}/build"
  #
  #   # Extract the application data into the package directory root
  #   tar -xJf data.tar.xz -C "${pkgdir}"
  #
  #   # Install the binary directory and link into package
  #   install -dm755 "${pkgdir}/usr/bin"
  #   ln -s "/opt/${bin_name}/${bin_name}" "${pkgdir}/usr/bin/${_pkgbasename}"
  #
  #   # Install the application logo and desktop launcher
  #   install -Dm644 "${_pkgbasename}.png" "${pkgdir}/usr/share/icons/hicolor/128x128/apps/${_pkgbasename}.png"
  #   install -Dm644 "${_pkgbasename}.desktop" "${pkgdir}/usr/share/applications/${_pkgbasename}.desktop"
  #
  #   # Fix log4j
  #   cd "${pkgdir}/opt/${bin_name}/app/"
  #   #   zipinfo lib/log4j-core*.jar | grep Jndi
  #   log4jscanner .
  #   log4jscanner --rewrite .
  #   #   zipinfo lib/log4j-core*.jar | grep Jndi
}
